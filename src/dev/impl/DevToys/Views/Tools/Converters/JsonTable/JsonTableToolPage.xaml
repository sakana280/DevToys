<Page
    x:Class="DevToys.Views.Tools.JsonTable.JsonTableToolPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:DevToys.UI.Controls"
    xmlns:converters="using:DevToys.UI.Converters"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls" xmlns:ex="using:DevToys.UI.Extensions" xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d"
    NavigationCacheMode="Required">

    <Page.Resources>
        <converters:NullToBooleanConverter x:Key="InvertedNullToBooleanConverter" IsInverted="True"/>
    </Page.Resources>

    <Grid Margin="0,0,0,16" RowSpacing="12">
        <!-- Horizontal layout in compact overlay mode -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <ex:IsCompactOverlayModeTrigger TargetElement="{x:Bind}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="VerticalGridSplitter.Visibility" Value="Collapsed"/>
                        <Setter Target="HorizontalGridSplitter.Visibility" Value="Visible"/>
                        <Setter Target="CopyFormatSetting.IsExpanded" Value="False"/>
                        <Setter Target="InputCodeEditor.(Grid.Row)" Value="0" />
                        <Setter Target="InputCodeEditor.(Grid.RowSpan)" Value="1" />
                        <Setter Target="InputCodeEditor.(Grid.Column)" Value="0" />
                        <Setter Target="InputCodeEditor.(Grid.ColumnSpan)" Value="3" />
                        <Setter Target="OutputSection.(Grid.Row)" Value="2" />
                        <Setter Target="OutputSection.(Grid.RowSpan)" Value="1" />
                        <Setter Target="OutputSection.(Grid.Column)" Value="0" />
                        <Setter Target="OutputSection.(Grid.ColumnSpan)" Value="3" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True" FromVerticalOffset="50"/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid x:Name="MainGrid" RowSpacing="12">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <StackPanel
                Grid.Row="0"
                Spacing="4">

                <muxc:InfoBar
                    x:Name="ErrorMessage"
                    Severity="Warning"
                    Message="{x:Bind ViewModel.ErrorMessage, Mode=OneWay}"
                    IsOpen="{x:Bind ViewModel.ErrorMessage, Mode=OneWay, Converter={StaticResource InvertedNullToBooleanConverter}}"
                    IsClosable="False"/>

                <TextBlock x:Name="ConfigurationSubtitle" Style="{StaticResource SubTitleTextBlock}" Text="{x:Bind ViewModel.Strings.Configuration}" />

                <controls:ExpandableSettingControl
                    x:Name="CopyFormatSetting"
                    Title="{x:Bind ViewModel.Strings.ClipboardFormatHeading}"
                    Description="{x:Bind ViewModel.Strings.ClipboardFormatDescription}">
                    <controls:ExpandableSettingControl.Icon>
                        <FontIcon Glyph="&#xf7ed;" />
                    </controls:ExpandableSettingControl.Icon>
                    <ComboBox
                        AutomationProperties.Name="{x:Bind ViewModel.Strings.ClipboardFormatOptions}"
                        ItemsSource="{x:Bind ViewModel.CopyFormatItems}"
                        DisplayMemberPath="DisplayName"
                        SelectedValuePath="Tag"
                        SelectedValue="{x:Bind ViewModel.CopyFormatMode, Mode=TwoWay}">
                    </ComboBox>
                </controls:ExpandableSettingControl>
            </StackPanel>

            <Grid Grid.Row="1" x:Name="InputOutputGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="100"/>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition MinWidth="100"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition MinHeight="100"/>
                    <RowDefinition Height="16"/>
                    <RowDefinition MinHeight="100"/>
                </Grid.RowDefinitions>

                <controls:CodeEditor
                    x:Name="InputCodeEditor"
                    Grid.Column="0"
                    Grid.Row="0"
                    Grid.RowSpan="3"
                    Header="{x:Bind ViewModel.Strings.Input}"
                    Text="{x:Bind ViewModel.InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    CodeLanguage="JSON"/>

                <toolkit:GridSplitter
                    x:Name="VerticalGridSplitter"
                    Grid.Column="1"
                    Grid.Row="0"
                    Grid.RowSpan="3"
                    Width="16"
                    Margin="0,42,0,0"
                    ResizeBehavior="BasedOnAlignment"
                    ResizeDirection="Columns">
                    <toolkit:GridSplitter.Element>
                        <FontIcon
                            Glyph="&#xFD55;"
                            FontSize="13"/>
                    </toolkit:GridSplitter.Element>
                </toolkit:GridSplitter>

                <!-- Horizontal splitter for compact overlay mode -->
                <toolkit:GridSplitter
                    x:Name="HorizontalGridSplitter"
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Height="16"
                    ResizeBehavior="BasedOnAlignment"
                    ResizeDirection="Rows"
                    Visibility="Collapsed">
                    <toolkit:GridSplitter.Element>
                        <FontIcon
                            Glyph="&#xFD52;"
                            FontSize="13"/>
                    </toolkit:GridSplitter.Element>
                </toolkit:GridSplitter>

                <Grid
                    x:Name="OutputSection"
                    Grid.Column="2"
                    Grid.Row="0"
                    Grid.RowSpan="3">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        x:Name="HeaderTextBlock"
                        Grid.Row="0"
                        Grid.Column="0"
                        Text="{x:Bind ViewModel.Strings.Output}"
                        Margin="{ThemeResource TextBoxTopHeaderMargin}"
                        Style="{StaticResource SubTitleTextBlock}"
                        TextWrapping="Wrap"
                        VerticalAlignment="Bottom">
                    </TextBlock>
                    <StackPanel
                            x:Name="CommandsToolBar"
                            Grid.Row="0"
                            Grid.Column="1"
                            Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="0,0,0,8"
                            AutomationProperties.LabeledBy="{x:Bind HeaderTextBlock}">
                        <Button
                            x:Name="ExpandButton"
                            Margin="8,0,0,0"
                            ToolTipService.ToolTip="{Binding Instance.Common.Expand, Mode=OneTime, Source={StaticResource LanguageManager}}"
                            AutomationProperties.Name="{Binding Instance.Common.Expand, Mode=OneTime, Source={StaticResource LanguageManager}}"
                            Click="ExpandButton_Click">
                            <FontIcon x:Name="ExpandButtonIcon" Glyph="&#xF15F;"/>
                        </Button>
                        <Button
                            x:Name="CopyButton"
                            Margin="8,0,0,0"
                            AutomationProperties.Name="{Binding Instance.Common.Copy, Mode=OneTime, Source={StaticResource LanguageManager}}"
                            Click="CopyButton_Click">
                            <StackPanel Orientation="Horizontal" Spacing="4">
                                <FontIcon Glyph="&#xF32B;"/>
                                <TextBlock VerticalAlignment="Center" Text="{Binding Instance.Common.Copy, Mode=OneTime, Source={StaticResource LanguageManager}}"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                    <toolkit:DataGrid
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        x:Name="OutputDataGrid"
                        AutoGenerateColumns="False"/>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="ExpandedGrid"/>
    </Grid>
</Page>
